package co.edu.ue.controller;

import java.util.List;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import co.edu.ue.dto.DatosUsuariosDTO;
import co.edu.ue.entity.DatosUsuarios;
import co.edu.ue.service.IDatoUsuarioService;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;


@RestController
@CrossOrigin("*")
@RequestMapping(value="dato-usuario")
public class DatoUsuarioController {
	
	@Autowired
    private ModelMapper modelMapper; 
	
	@Autowired
	IDatoUsuarioService service;
	

	@GetMapping(value="datos-usuarios", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<List<DatosUsuariosDTO>> getAllDatosUsuarios() {
		return new ResponseEntity<List<DatosUsuariosDTO>> ( this.service.listAllDatosUsuarios(), HttpStatus.ACCEPTED);
	}
	
	@GetMapping(value="dato-usuario-id", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<DatosUsuariosDTO> getByIdDatoUsuario(@RequestParam("idDatoUsuario") int id) {
		return new ResponseEntity<DatosUsuariosDTO>( this.service.findIdDatoUsuario(id), HttpStatus.ACCEPTED);
	}
	
	@PostMapping(value="add-dato-usuario", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<DatosUsuariosDTO> postDatoUsuario(@RequestBody DatosUsuariosDTO newDatoUsuario) {
		DatosUsuarios addDatoUser = modelMapper.map(newDatoUsuario, DatosUsuarios.class);
		DatosUsuariosDTO addedDatoUser = this.service.addDatoUsuario(addDatoUser);
		return new ResponseEntity<DatosUsuariosDTO>( addedDatoUser, HttpStatus.CREATED);
	}
	
	@PutMapping(value="update-dato-usuario", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<DatosUsuariosDTO> putDatoUsuario(@RequestBody DatosUsuariosDTO updateDatoUsuario) {
		return new ResponseEntity<DatosUsuariosDTO>( this.service.updDatoUsuario(updateDatoUsuario), HttpStatus.OK);
	}
	
	
}

package co.edu.ue.controller;

import java.util.List;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import co.edu.ue.dto.LibrosFavoritosDTO;
import co.edu.ue.entity.LibrosFavoritos;
import co.edu.ue.service.ILibrosFavoritosService;

@RestController
@CrossOrigin("*")
@RequestMapping(value="libro-favorito")

public class LibrosFavoritosController {
	
	@Autowired
	private ModelMapper modelMapper;

	@Autowired
	ILibrosFavoritosService service;
	
	@GetMapping(value="libros-favoritos", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<List<LibrosFavoritosDTO>> getAllLibrosFavoritos() {
		return new ResponseEntity<List<LibrosFavoritosDTO>> ( this.service.listAllLibrosFavoritos(), HttpStatus.ACCEPTED);
	}
	
	@GetMapping(value="libro-favorito-id", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<LibrosFavoritosDTO> getByIdLibrosFavoritos(@RequestParam("idLibroFavorito") int id) {
		return new ResponseEntity<LibrosFavoritosDTO>( this.service.findIdLibrosFavoritos(id), HttpStatus.ACCEPTED);
	}
	
	@PostMapping(value="add-libro-favorito", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<LibrosFavoritosDTO> postLibrosFavoritos(@RequestBody LibrosFavoritosDTO newLibrosFavoritos) {
		LibrosFavoritos addLibrosFavoritos = this.modelMapper.map(newLibrosFavoritos, LibrosFavoritos.class);
		LibrosFavoritosDTO addedLibrosFavoritos = this.service.addLibrosFavoritos(addLibrosFavoritos);
		return new ResponseEntity<LibrosFavoritosDTO>(addedLibrosFavoritos, HttpStatus.CREATED);
	}
	
	@PutMapping(value="update-libro-favorito", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<LibrosFavoritosDTO> putLibrosFavoritos(@RequestBody LibrosFavoritosDTO updateLibrosFavoritos) {
		return this.service.upLibrosFavoritos(updateLibrosFavoritos);
	}
}
